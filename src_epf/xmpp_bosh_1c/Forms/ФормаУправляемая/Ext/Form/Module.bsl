// 1 - посылаем приветствие
&НаКлиенте
Процедура _1()
	Сообщить("_1");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body content='text/xml; charset=utf-8' from='"+Объект.Пользователь+"@"+Объект.Домен+"' secure='true'
	| hold='1' rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' to='"+Объект.Домен+"' route='"+Объект.BOSH_URL+"' ver='1.10' wait='300' xml:lang='en' xmpp:version='1.0' xmlns='http://jabber.org/protocol/httpbind' xmlns:xmpp='urn:xmpp:xbosh'/>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	// Ответ сервера раскладываем на объект и выдираем код SID
	Чтение = новый ЧтениеXML;
	Чтение.УстановитьСтроку(СтрокаОтветаСервера);
	
	Пока Чтение.Прочитать() Цикл
    	Если Чтение.КоличествоАтрибутов() > 0 Тогда
			Пока Чтение.ПрочитатьАтрибут() Цикл
				Если Чтение.ТипУзла = ТипУзлаXML.Атрибут Тогда
					Если Чтение.Имя = "sid" Тогда
						Объект.СИД = Чтение.Значение;
					КонецЕсли;
				КонецЕсли;
        	КонецЦикла;
    	КонецЕсли;
	КонецЦикла;
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _1()

&НаСервере
Функция расшф64(текст64)
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ЭтОбъект.Декодировать64(текст64);
КонецФункции
&НаСервере
Функция зашф64(текст)
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ЭтОбъект.Кодировать64(текст);
КонецФункции
&НаСервере
Функция строк_струк(строкаДляРазбора)
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ЭтОбъект.РазложитьСтрокуВСтруктуру(строкаДляРазбора);
КонецФункции
&НаСервере
Функция мд5(строкашифр,расшНЕХ="")
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ЭтОбъект.MD5ХешСтрока(строкашифр,расшНЕХ);
КонецФункции
&НаСервере
Функция мд5бз64(строкашифр)
	ЭтОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ЭтОбъект.MD5b64(строкашифр);
КонецФункции

&НаКлиенте
Функция строкаРеспонсе(структураДляОтвета)
	// функция создания поля response для challenge
	СтрокаВозвр="";
	
	authzid = Ложь;
	authzid_знач = "";
	Для  каждого првСтрк из структураДляОтвета Цикл
		Если првСтрк.Ключ = "authzid" Тогда
			authzid=Истина;
			authzid_знач = првСтрк.Значение;
		КонецЕсли;
	КонецЦикла;
	
	realm="";
	Если НЕ структураДляОтвета.realm="-" Тогда
		realm=структураДляОтвета.realm;
	КонецЕсли;
	
	раскНЕХ64 = мд5бз64(Объект.Пользователь+":"+realm+":"+Объект.Пароль);
	Сообщить(раскНЕХ64);
		
	а1 = ":"+структураДляОтвета.nonce+":"+структураДляОтвета.cnonce;
	Если authzid Тогда
		а1 = а1+":"+authzid_знач;
	КонецЕсли;
	а2="AUTHENTICATE:"+структураДляОтвета.digest_uri;
	
	общаяСтрока = ""+мд5(а1,раскНЕХ64)+
		":"+ структураДляОтвета.nonce +
		":"+ структураДляОтвета.nc +
		":"+ структураДляОтвета.cnonce +
		":"+ структураДляОтвета.qop +
		":"+ мд5(а2);
		
	Сообщить("rD="+общаяСтрока);
	СтрокаВозвр = мд5(общаяСтрока);
	
	Возврат СтрокаВозвр;
КонецФункции
// 2 - отправка серверу команды на авторизацию методом DIGEST-MD5
&НаКлиенте
Функция _2()
	Сообщить("_2");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind' xmlns:xmpp='urn:xmpp:xbosh'>
	|<auth xmlns='urn:ietf:params:xml:ns:xmpp-sasl' mechanism='DIGEST-MD5'/></body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	строкаВозвратаДля3="";
	
	// Ответ сервера раскладываем на объект и выдираем код SID
	Чтение = новый ЧтениеXML;
	Чтение.УстановитьСтроку(СтрокаОтветаСервера);
	ПостроитьДУМ = Новый ПостроительDOM;
	ДокументДУМ = ПостроитьДУМ.Прочитать(Чтение);
	КорневойУзел = ДокументДУМ.ПервыйДочерний;
	Сообщить("ИмяУзла="+КорневойУзел.ИмяУзла+" ЗначениеУзла="+КорневойУзел.ЗначениеУзла);
	УзлыКорневого = КорневойУзел.ДочерниеУзлы;
	
	ВсегоУзловКорневого = УзлыКорневого.Количество(); // Получаем коллекцию узлов корневого элемента
	
	струк = Новый Структура; // параметры от сервера для авторизации
	
	Если ВсегоУзловКорневого>0 Тогда
		Для  каждого узл из УзлыКорневого Цикл
			//Сообщить("ИмяУзла="+узл.ИмяУзла+" ЗначениеУзла="+узл.ЗначениеУзла);
			Если узл.ИмяУзла = "challenge" Тогда
				неХЭШстрока = расшф64(узл.ТекстовоеСодержимое);
				струк = строк_струк(неХЭШстрока);
				Если струк.количество()>0 Тогда
					// нормально разобрали, теперь добавляем доп.параметры
					
					// 1-добавление к challenge digest-uri если он не пришел в ответе от сервера
					digest_uri = Ложь;
					Для  каждого првСтрк из струк Цикл
						Если првСтрк.Ключ = "digest-uri" Тогда
							digest_uri=Истина;
						КонецЕсли;
					КонецЦикла;
					Если НЕ digest_uri Тогда
						струк.Вставить("digest_uri", "xmpp/"+Объект.Домен);
					КонецЕсли;
					// 2-генерация cnonce - уникальный номер сессии
					уникномерсесс = "";
					гуид = Новый УникальныйИдентификатор();
					уникномерсесс = СтрЗаменить(гуид,"-","");
					струк.Вставить("cnonce", зашф64(уникномерсесс));
					струк.Вставить("nc", "00000001");
					// 3-проверка в challenge -> qop пришел в ответе от сервера и правильный ли он
					qop = Ложь;
					Для  каждого првСтрк из струк Цикл
						Если првСтрк.Ключ = "qop" Тогда
							qop=Истина;
						КонецЕсли;
					КонецЦикла;
					Если НЕ qop Тогда
						струк.Вставить("qop", "auth");
					Иначе
						Если НЕ струк.qop = "auth" Тогда
							струк.qop = "auth";
						КонецЕсли;
					КонецЕсли;
					// 3-добавление к challenge realm если он не пришел в ответе от сервера
					realm = Ложь;
					Для  каждого првСтрк из струк Цикл
						Если првСтрк.Ключ = "realm" Тогда
							realm=Истина;
						КонецЕсли;
					КонецЦикла;
					Если НЕ realm Тогда
						струк.Вставить("realm", "-"); // надо учитывать что
					КонецЕсли;
				КонецЕсли;
			
				Если струк.realm = "-" Тогда
					Знач_realm="";
				Иначе
					Знач_realm=струк.realm;
				КонецЕсли;
				
				// 4-создание кодированной строки response на основании некоторых данных из challenge и логина-пароля
				респонсеСтр=строкаРеспонсе(струк);
				
				// формируем строку для запроса №3
				строкаВозвратаДля3 = 
					"username="""+Объект.Пользователь+""","+
					"realm="""+Знач_realm+""","+
					"nonce="""+струк.nonce+""","+
					"cnonce="""+струк.cnonce+""","+
					"nc="+струк.nc+","+
					"qop="+струк.qop+","+
					"digest-uri="""+струк.digest_uri+""","+
					"response="+респонсеСтр+","+
					"charset=utf-8";
					
				Объект.challenge_actv=Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Атриб = КорневойУзел.Атрибуты;
	Сообщить("кол.доп. атрибутов узла = "+Атриб.Количество());
	Если Атриб.Количество()>0 Тогда
		Для  каждого атр из Атриб Цикл
			Сообщить("атрУзИмя="+атр.ИмяУзла+" атрУзЗначение="+атр.ЗначениеУзла);
		КонецЦикла;
	КонецЕсли;
	
		
	Для  каждого првСтрк из струк Цикл
		Сообщить(":::"+првСтрк.Ключ+"==="+првСтрк.Значение);
	КонецЦикла;
	
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
	
	Возврат строкаВозвратаДля3;
	
КонецФункции // _2()

// 3 - и теперь формирование xml на отправку. Получившийся массив переводим в строку значений и кодируем в base64
&НаКлиенте
Процедура _3(строкаДанных)
	Сообщить("_3");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'>"+зашф64(строкаДанных)+"</response>
	|</body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
	Если Найти(СтрокаОтветаСервера,"<not-authorized")>0 Тогда
		Объект.ОтказАвторизации=Истина;
		Сообщить("3=authorized");
	КонецЕсли;
	
КонецПроцедуры // _3()

// 4 - ну и сразу посылаем встречный ответ и авторизация пройдена
&НаКлиенте
Процедура _4()
	Сообщить("_4");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<response xmlns='urn:ietf:params:xml:ns:xmpp-sasl'/>
	|</body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
	Если Найти(СтрокаОтветаСервера,"<not-authorized")>0 Тогда
		Объект.ОтказАвторизации=Истина;
		Сообщить("4=authorized");
	КонецЕсли;
КонецПроцедуры // _4()

// 5 - после авторизации опять посылаем приветствие
&НаКлиенте
Процедура _5()
	Сообщить("_5");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' to='"+Объект.Домен+"'
	| xml:lang='en' xmpp:restart='true' xmlns='http://jabber.org/protocol/httpbind' xmlns:xmpp='urn:xmpp:xbosh'/>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
	Если Найти(СтрокаОтветаСервера,"<not-authorized")>0 Тогда
		Объект.ОтказАвторизации=Истина;
		Сообщить("5=authorized");
	КонецЕсли;
КонецПроцедуры // _5()

// 6 - сейчас устанавливаем имя ресурса (расположение вашего клиента)
&НаКлиенте
Процедура _6()
	Сообщить("_6");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<iq id='bind_"+Формат(Объект.РИД,"ЧГ=1000000")+"' type='set' xmlns='jabber:client'>
	|<bind xmlns='urn:ietf:params:xml:ns:xmpp-bind'/>
	|</iq></body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _6()

// 6о - Затем сервер требовал создать сессию... Это нужно для отсылки статусов, сообщений да и вообще. Не будем отказывать:
&НаКлиенте
Процедура _6о()
	Сообщить("_6о");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<iq id='bind_"+Формат(Объект.РИД,"ЧГ=1000000")+"' type='set' xmlns='jabber:client'>
	|<session xmlns='urn:ietf:params:xml:ns:xmpp-session' />
	|</iq></body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _6о()

// 6.а -ну и теперь выходим в онлайн и становимся видимыми для ваших контактов
&НаКлиенте
Процедура _6а()
	Сообщить("_6а");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<presence><show/><status>1c input</status><priority>10</priority></presence>
	//|<presence><show/><status>1С вход</status><priority>10</priority></presence>
	|</body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _6а()

// 7 - теперь можно отправить сообщение например для контакта kodnik@jappix.com
// в поле from указываете полный JID вместе с ресурсом(он должен быть получен в ответе сервера при установке ресурса), в поле to - кому адресовано сообщение, если ресурс не известен, можно без указания ресурса.
&НаКлиенте
Процедура _7()
	Сообщить("_7");
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<message to='kodnik@jappix.com' from='kodnik@jabber.ru' xmlns='jabber:client' type=""chat""><body>test</body></message></body>";
	// FIXME: русский не понимает 1С при отправке
	//|<body>тестовое письмо из 1С:Предприятия</body>
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _7()

&НаКлиенте
Процедура _7а()
	Сообщить("_7а");
	дляКогоСообщ = КомуХМРР; // в формате login@domen.com
	отКогоСообщ = Объект.Пользователь+"@"+Объект.Домен;
	Объект.РИД = Объект.РИД + 1;
	ТестЗапроса = "<body rid='"+Формат(Объект.РИД,"ЧГ=1000000")+"' sid='"+Формат(Объект.СИД,"ЧГ=1000000")+"' xmlns='http://jabber.org/protocol/httpbind'>
	|<message to='"+дляКогоСообщ+"' from='"+отКогоСообщ+"' xmlns='jabber:client' type='normal'><body>test</body></message></body>";
	
	СтрокаОтветаСервера = ВыполнитьПОСТЗапрос(ТестЗапроса);
	
	Сообщить("К="+ТестЗапроса);
	Сообщить("С="+СтрокаОтветаСервера);
КонецПроцедуры // _7а()

&НаКлиенте
Процедура ВыполнитьЗапрос(Команда)
	Объект.BOSH_URL = bosh_url;
	Объект.Домен = Домен;
	Объект.Пользователь = Логин;	
	Объект.Пароль = Пароль;
	
	_1();
	взврДля3=_2();
	Если Объект.challenge_actv=Истина Тогда
		Сообщить(взврДля3);
		_3(взврДля3); //<not-authorized
		Если Объект.ОтказАвторизации=Истина Тогда Сообщить("ОШИБКА: not-authorized");Возврат; КонецЕсли;
		_4(); //<not-authorized
		Если Объект.ОтказАвторизации=Истина Тогда Сообщить("ОШИБКА: not-authorized");Возврат; КонецЕсли;
		_5(); //<not-authorized
		Если Объект.ОтказАвторизации=Истина Тогда Сообщить("ОШИБКА: not-authorized");Возврат; КонецЕсли;
		_6();
		_6о();
		_6а();
		_7();
		_7а();
		_7а();
	Иначе
		Сообщить("challenge - не пришел");
	КонецЕсли;
КонецПроцедуры

// ТОДО: надо проверить выполнение на сервере
&НаКлиенте
Функция ВыполнитьПОСТЗапрос(ТекстДляЗапроса)
	СерверДляЗапроса=Объект.Домен; //"jabber.ru"
	СсылкаНаРесурс="/http-bind/";
	Таймаут = 50; // ждем ответ 50 сек
	// Создаем новое HTTP соединение с указанием сервера
	// Новый HTTPСоединение(<Сервер>, <Порт>, <Пользователь>, <Пароль>, <Прокси>, <Таймаут>, <ЗащищенноеСоединение>, <ИспользоватьАутентификациюОС>)
	//HTTP = Новый HTTPСоединение(СерверДляЗапроса,,,,,Таймаут);
	HTTP = Новый HTTPСоединение(СерверДляЗапроса,,,,,ложь,Неопределено);
	// Получим временный файл для передачи в теле POST запроса
	ФайлТелаЗапроса = ПолучитьИмяВременногоФайла();
	// Запишем в файл содержимое тела запроса (текст)
	ТекстФайл = Новый ТекстовыйДокумент;
	ТекстФайл.УстановитьТекст(ТекстДляЗапроса);
	ТекстФайл.Записать(ФайлТелаЗапроса, КодировкаТекста.UTF8);
	// Получим размер данных для передачи в заголовок
	ФайлНаОтправку = Новый Файл(ФайлТелаЗапроса);
	РазмерФайлаНаОтправку = XMLСтрока(ФайлНаОтправку.Размер());
	// Получим временный файл — тело ответа POST запроса
	ФайлРезультат = ПолучитьИмяВременногоФайла();
	// Заголовок создадим в виде соответствия
	ЗаголовокЗапросаHTTP = Новый Соответствие();
	// Передаем в заголовках размер и тип данных на отправку
	ЗаголовокЗапросаHTTP.Вставить("Content-Length", РазмерФайлаНаОтправку);
	ЗаголовокЗапросаHTTP.Вставить("Content-Type", "text/xml; charset=utf-8");
	
	ЗаголовокЗапросаHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокЗапросаHTTP.Вставить("Content-Charset", "utf-8");
	
	// Отсылаем POST запрос на обработку.
	// СсылкаНаРесурс — ссылка на веб-сервер (страницу), к которой посылается POST запрос
	Попытка
		ОтветHTTP = HTTP.ОтправитьДляОбработки(ФайлТелаЗапроса, СсылкаНаРесурс, ФайлРезультат, ЗаголовокЗапросаHTTP);
		Сообщить(ОтветHTTP.КодСостояния); // 200-ОК
	Исключение
		Сообщить(СерверДляЗапроса+СсылкаНаРесурс);
		Инфо = ИнформацияОбОшибке();
		Сообщить("Описание='" + Инфо.Описание + "'");
		Сообщить("ИмяМодуля='" + Инфо.ИмяМодуля + "'");
		Сообщить("НомерСтроки=" + Инфо.НомерСтроки);
		Сообщить("ИсходнаяСтрока='" + Инфо.ИсходнаяСтрока + "'");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
		
	// Получим ответ
	ТекстовыйФайлОтвета = Новый ТекстовыйДокумент;
	ТекстовыйФайлОтвета.Прочитать(ФайлРезультат, КодировкаТекста.UTF8);
	СтрокаОтветаСервера = ТекстовыйФайлОтвета.ПолучитьТекст();
	
	УдалитьФайлы(ФайлТелаЗапроса);
	
	Возврат СтрокаОтветаСервера;
КонецФункции

&НаСервере
Функция СлучайноеЧисло(Мин,Макс,флЦелое = 0)
	ГСЧ = Новый ГенераторСлучайныхЧисел();
	СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1, 12000);
	//вместо Randomize
	Для н = 1 По СлучайноеЧисло Цикл
		Уник = Новый УникальныйИдентификатор;
	КонецЦикла;
	//генерируем GUID
	Уник = СокрЛП(Новый УникальныйИдентификатор);
	//оставляем только цифры
	Уник = СтрЗаменить(Уник,"-","");
	Уник = СтрЗаменить(Уник,"a","");
	Уник = СтрЗаменить(Уник,"b","");
	Уник = СтрЗаменить(Уник,"c","");
	Уник = СтрЗаменить(Уник,"d","");
	Уник = СтрЗаменить(Уник,"e","");
	Уник = СтрЗаменить(Уник,"f","");
	//знаменатель должен иметь такое же количество нулей + 1
	Знаменатель = 10;
	Для н = 2 По (СтрДлина(СтрЗаменить(Уник,Символы.НПП,""))) Цикл
		Знаменатель = Знаменатель * 10;
	КонецЦикла;
	Случ = (Число(Уник)) / Знаменатель; //здесь получается дробное случайное число от 0 до 1
	//преобразуем его в случайное число из заданного интервала, округляем до целого
	
	ЧислоИзИнтервала = Мин(Макс(Окр(Мин + (Макс-Мин)*Случ),Мин),Макс);
	
	Возврат ЧислоИзИнтервала; 
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	bosh_url = "http://jabber.ru/http-bind";
	Домен = "jabber.ru";
	
	Объект.BOSH_URL = bosh_url;
	Объект.Домен = Домен;
	Объект.Пользователь = Логин;	
	Объект.Пароль = Пароль;
	Объект.СИД = "";
	Объект.РИД = 0;
	Объект.challenge_actv=Ложь;
	Объект.ОтказАвторизации=Ложь;
	
	Объект.РИД = СлучайноеЧисло(1000,30000,1);
	
	СерверДляЗапроса = Объект.Домен;
	ТекстДляЗапроса = "";
	
	
КонецПроцедуры
